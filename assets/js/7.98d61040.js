(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{202:function(t,e,r){"use strict";r.r(e);var a=r(2),i=Object(a.a)({},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"introduction"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[t._v("#")]),t._v(" Introduction")]),t._v(" "),r("p",[t._v("Grax is a light-weight graph data mapper which maps RDF graph data from "),r("router-link",{attrs:{to:"/rdf-ex/"}},[t._v("RDF.ex")]),t._v(" data structures to schema-conform Elixir structs.")],1),t._v(" "),r("p",[t._v("This is an early version with a limited scope.  It currently maps only from and to "),r("router-link",{attrs:{to:"/rdf-ex/"}},[t._v("RDF.ex")]),t._v(" graphs and even that in the most basic way.\nYou'll have to use "),r("a",{attrs:{href:"/rdf-ex/serializations"}},[t._v("RDF.ex serializers")]),t._v(" or the "),r("router-link",{attrs:{to:"/sparql-client/"}},[t._v("SPARQL.Client")]),t._v(" to get the RDF.ex graph on your own.\nNo SPARQL-query builders.\n(Almost) No RDFS-support.\nBut within that limited scope, it should be functional already.")],1),t._v(" "),r("p",[t._v("This guide is split into two parts:")]),t._v(" "),r("ol",[r("li",[r("a",{attrs:{href:"/grax/schemas"}},[t._v("Schemas")]),t._v(" which describes the basics of the Grax mapping between graphs and Elixir structs and how to define schemas for that.")]),t._v(" "),r("li",[r("a",{attrs:{href:"/grax/api"}},[t._v("API")]),t._v(" which introduces the API.")])]),t._v(" "),r("p",[t._v("It's assumed that you're familiar with Elixir and have a basic understanding of the RDF data model ("),r("a",{attrs:{href:"https://www.ontotext.com/knowledgehub/fundamentals/what-is-rdf/",target:"_blank",rel:"noopener noreferrer"}},[t._v("this brief introduction"),r("OutboundLink")],1),t._v(" should be sufficient).")])])},[],!1,null,null,null);e.default=i.exports}}]);